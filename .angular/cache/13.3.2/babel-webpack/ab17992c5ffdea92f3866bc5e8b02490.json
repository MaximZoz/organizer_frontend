{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { isUndefined } from 'lodash';\nimport * as moment from 'moment';\nimport { switchMap } from 'rxjs/operators';\nimport { ResponseCode } from 'src/app/enums/responseCode';\nimport { Constants } from 'src/app/Helper/constants';\nimport { Task } from 'src/app/Models/user';\nimport { UUID } from '../../Helper/constants';\nimport { moveItemInArray } from '@angular/cdk/drag-drop';\nlet OrganaizerComponent = class OrganaizerComponent {\n  constructor(dateService, userService) {\n    this.dateService = dateService;\n    this.userService = userService;\n    this.tasks = [];\n    this.movies = ['Episode I - The Phantom Menace', 'Episode II - Attack of the Clones', 'Episode III - Revenge of the Sith', 'Episode IV - A New Hope', 'Episode V - The Empire Strikes Back', 'Episode VI - Return of the Jedi', 'Episode VII - The Force Awakens', 'Episode VIII - The Last Jedi', 'Episode IX â€“ The Rise of Skywalker'];\n  }\n\n  drop(event) {\n    moveItemInArray(this.tasks, event.previousIndex, event.currentIndex);\n  }\n\n  get user() {\n    return JSON.parse(localStorage.getItem(Constants.USER_KEY));\n  }\n\n  get cursor() {\n    return this.isAdmin ? 'move' : 'default';\n  }\n\n  get isAdmin() {\n    return this.user.roles.indexOf('Admin') > -1;\n  }\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      title: new FormControl('', Validators.required)\n    });\n  }\n\n  ngOnChanges() {\n    if (!isUndefined(this.selectedUserId)) {\n      this.dateService.date.pipe(switchMap(date => {\n        return this.userService.getTasks(date.format('DD.MM.YYYY'), this.selectedUserId);\n      })).subscribe(tasks => {\n        this.tasks = tasks;\n      });\n      this.getDayQuantitiesNow();\n      this.form = new FormGroup({\n        title: new FormControl('', Validators.required)\n      });\n    }\n  }\n\n  nowDate() {\n    this.dateService.date.next(moment());\n    this.getDayQuantitiesNow();\n  }\n\n  submit() {\n    const date = this.dateService.date.value.format('DD.MM.YYYY');\n    const newTask = new Task();\n    newTask.title = this.form.value.title;\n    newTask.id = UUID();\n    newTask.completed = false;\n    this.userService.create(newTask, date, this.selectedUserId).subscribe(res => {\n      if (res) {\n        this.form.reset();\n        newTask.date = this.dateService.date.value.format('YYYY-MM-DDT00:00:00');\n        this.tasks.push(newTask);\n        const dayQuantities = this.dateService.dayQuantities.value;\n        dayQuantities.push(newTask);\n        this.dateService.dayQuantities.next(dayQuantities);\n      }\n    });\n  }\n\n  remove(id) {\n    this.userService.removeTasks(id).subscribe(res => {\n      if (res.responseCode = ResponseCode.OK) {\n        this.tasks = this.tasks.filter(task => task.id !== id);\n        const dayQuantities = this.dateService.dayQuantities.value.filter(quantity => quantity.id !== id);\n        this.dateService.dayQuantities.next(dayQuantities);\n      }\n    });\n  }\n\n  success(id) {\n    this.userService.successTasks(id).subscribe(res => {\n      if (res.responseCode = ResponseCode.OK) {\n        this.tasks.find(task => task.id === id).completed = true; // const dayQuantities = this.dateService.dayQuantities.value.filter(\n        //   (quantity) => quantity.id !== id\n        // );\n        // this.dateService.dayQuantities.next(dayQuantities);\n      }\n    });\n  }\n\n  getDayQuantitiesNow() {\n    this.userService.getTaskMonth(this.dateService.date.value.format('DD.MM.YYYY'), this.selectedUserId).subscribe(dayQuantities => {\n      this.dayQuantities = dayQuantities;\n      this.dateService.dayQuantities.next(dayQuantities);\n    });\n  }\n\n};\n\n__decorate([Input()], OrganaizerComponent.prototype, \"selectedUserId\", void 0);\n\nOrganaizerComponent = __decorate([Component({\n  selector: 'app-organaizer',\n  templateUrl: './organaizer.component.html',\n  styleUrls: ['./organaizer.component.scss']\n})], OrganaizerComponent);\nexport { OrganaizerComponent };","map":null,"metadata":{},"sourceType":"module"}