{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { ResponseCode } from '../enums/responseCode';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../services/user.service\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"@angular/common\";\n\nfunction RegisterComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1, \" \\u0432\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0432\\u0430\\u043B\\u0438\\u0434\\u043D\\u044B\\u0439 email \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1, \" \\u0442\\u0430\\u043A\\u043E\\u0439 email \\u0443\\u0436\\u0435 \\u0437\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1, \" \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C \\u043D\\u0435 \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0431\\u044B\\u0442\\u044C \\u043F\\u0443\\u0441\\u0442\\u044B\\u043C \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1, \" \\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C \\u0432 \\u0444\\u043E\\u0440\\u043C\\u0430\\u0442\\u0435 [aA!111111] \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 24)(1, \"input\", 25);\n    i0.ɵɵlistener(\"change\", function RegisterComponent_div_33_Template_input_change_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const role_r5 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.onRoleChange(role_r5.role);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"label\", 26);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const role_r5 = ctx.$implicit;\n    const index_r6 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"id\", index_r6);\n    i0.ɵɵproperty(\"checked\", role_r5.isSelected);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", index_r6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", role_r5.role, \" \");\n  }\n}\n\nconst _c0 = function (a0, a1) {\n  return {\n    \"is-invalid\": a0,\n    \"is-valid\": a1\n  };\n};\n\nexport function WrongEmail(arr) {\n  return control => {\n    return !arr.includes(control === null || control === void 0 ? void 0 : control.value) ? null : {\n      wrongEmail: true\n    };\n  };\n}\nexport let RegisterComponent = /*#__PURE__*/(() => {\n  class RegisterComponent {\n    constructor(router, formBuilder, userServie, toastr) {\n      this.router = router;\n      this.formBuilder = formBuilder;\n      this.userServie = userServie;\n      this.toastr = toastr;\n      this.roles = [];\n      this.invalidEmails = [];\n      this.registerForm = this.formBuilder.group({\n        fullName: ['', [Validators.required]],\n        email: ['', [Validators.email, Validators.required]],\n        password: ['', [Validators.required, Validators.pattern]]\n      });\n    }\n\n    ngOnInit() {\n      this.getAllRoles();\n    }\n\n    onSubmit() {\n      let fullName = this.registerForm.controls['fullName'].value;\n      let email = this.registerForm.controls['email'].value;\n      let password = this.registerForm.controls['password'].value;\n      this.userServie.register(fullName, email, password, this.roles.filter(x => x.isSelected).map(x => x.role)).subscribe(data => {\n        if (data.responseCode == ResponseCode.OK) {\n          this.roles.forEach(x => x.isSelected = false);\n          this.toastr.success(`Вы создали учетную запись, теперь можно войти под ${this.registerForm.controls['email'].value}`);\n          this.registerForm.controls['fullName'].setValue('');\n          this.registerForm.controls['email'].setValue('');\n          this.registerForm.controls['password'].setValue('');\n          this.router.navigate(['login']);\n        } else {\n          if (data.dateSet[0].includes('is already taken')) {\n            this.toastr.error(this.registerForm.controls['email'].value);\n            this.invalidEmails.push(this.registerForm.controls['email'].value);\n            this.registerForm.controls['email'].setValidators(WrongEmail(this.invalidEmails));\n            this.registerForm.controls['email'].valueChanges;\n            this.registerForm.controls['email'].updateValueAndValidity();\n          }\n        }\n      }, error => {\n        this.toastr.error('Ошибка, повторите попытку позже');\n      });\n    }\n\n    getAllRoles() {\n      this.userServie.getAllRole().subscribe(roles => {\n        this.roles = roles;\n      });\n    }\n\n    onRoleChange(role) {\n      this.roles.forEach(x => {\n        if (x.role == role) {\n          x.isSelected = !x.isSelected;\n        }\n      });\n    }\n\n    get isRoleSelected() {\n      return this.roles.filter(x => x.isSelected).length > 0;\n    }\n\n  }\n\n  RegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.UserService), i0.ɵɵdirectiveInject(i4.ToastrService));\n  };\n\n  RegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    decls: 38,\n    vars: 19,\n    consts: [[1, \"container\", \"m-5\"], [1, \"row\", \"justify-content-center\"], [1, \"col-6\"], [1, \"card\"], [\"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [1, \"card-body\", \"needs-validation\"], [1, \"card-title\", \"text-center\"], [1, \"mb-3\", \"row\"], [\"for\", \"staticName\", 1, \"col-sm-2\", \"col-form-label\"], [1, \"col-sm-10\", \"has-validation\"], [\"type\", \"text\", \"formControlName\", \"fullName\", \"id\", \"staticName\", \"value\", \"\", 1, \"form-control\", \"is-invalid\", 3, \"ngClass\"], [1, \"invalid-feedback\"], [\"for\", \"staticEmail\", 1, \"col-sm-2\", \"col-form-label\"], [1, \"col-sm-10\"], [\"type\", \"text\", \"formControlName\", \"email\", \"id\", \"staticEmail\", \"value\", \"\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"inputPassword\", 1, \"col-sm-2\", \"col-form-label\"], [\"pattern\", \"^(?=.*?[A-Z])(?=(.*[a-z]){1,})(?=(.*[\\\\d]){1,})(?=(.*[\\\\W]){1,})(?!.*\\\\s).{6,}$\", \"type\", \"password\", \"formControlName\", \"password\", \"id\", \"inputPassword\", \"autocomplete\", \"on\", 1, \"form-control\", 3, \"ngClass\"], [1, \"row\", \"mb-3\"], [1, \"col-sm-2\"], [\"class\", \"form-check\", 4, \"ngFor\", \"ngForOf\"], [1, \"d-flex\", \"flex-row-reverse\", \"bd-highlight\"], [1, \"p-2\", \"bd-highlight\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"m-2\", \"bd-highlight\", 3, \"disabled\"], [1, \"form-check\"], [\"type\", \"checkbox\", \"name\", \"role\", 1, \"form-check-input\", 3, \"checked\", \"id\", \"change\"], [1, \"form-check-label\", 3, \"for\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(5, \"div\", 5)(6, \"h5\", 6);\n        i0.ɵɵtext(7, \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 7)(9, \"label\", 8);\n        i0.ɵɵtext(10, \"\\u0418\\u043C\\u044F\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 9);\n        i0.ɵɵelement(12, \"input\", 10);\n        i0.ɵɵelementStart(13, \"div\", 11);\n        i0.ɵɵtext(14, \"\\u0418\\u043C\\u044F \\u043D\\u0435 \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0431\\u044B\\u0442\\u044C \\u043F\\u0443\\u0441\\u0442\\u044B\\u043C\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(15, \"div\", 7)(16, \"label\", 12);\n        i0.ɵɵtext(17, \"\\u041F\\u043E\\u0447\\u0442\\u0430\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 13);\n        i0.ɵɵelement(19, \"input\", 14);\n        i0.ɵɵtemplate(20, RegisterComponent_div_20_Template, 2, 0, \"div\", 15);\n        i0.ɵɵtemplate(21, RegisterComponent_div_21_Template, 2, 0, \"div\", 15);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"div\", 7)(23, \"label\", 16);\n        i0.ɵɵtext(24, \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 13);\n        i0.ɵɵelement(26, \"input\", 17);\n        i0.ɵɵtemplate(27, RegisterComponent_div_27_Template, 2, 0, \"div\", 15);\n        i0.ɵɵtemplate(28, RegisterComponent_div_28_Template, 2, 0, \"div\", 15);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(29, \"div\", 18)(30, \"label\", 16);\n        i0.ɵɵtext(31, \"\\u041F\\u0440\\u0430\\u0432\\u0430\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"div\", 19);\n        i0.ɵɵtemplate(33, RegisterComponent_div_33_Template, 4, 4, \"div\", 20);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(34, \"div\", 21)(35, \"div\", 22)(36, \"button\", 23);\n        i0.ɵɵtext(37, \" \\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F \");\n        i0.ɵɵelementEnd()()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(10, _c0, ctx.registerForm.get(\"fullName\").invalid && ctx.registerForm.get(\"fullName\").touched, ctx.registerForm.get(\"fullName\").valid));\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(13, _c0, ctx.registerForm.get(\"email\").invalid && ctx.registerForm.get(\"email\").touched, ctx.registerForm.get(\"email\").valid));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !(ctx.registerForm.get(\"email\").errors == null ? null : ctx.registerForm.get(\"email\").errors.wrongEmail));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.registerForm.get(\"email\").errors == null ? null : ctx.registerForm.get(\"email\").errors.wrongEmail);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(16, _c0, ctx.registerForm.get(\"password\").invalid && ctx.registerForm.get(\"password\").touched, ctx.registerForm.get(\"password\").valid));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.registerForm.get(\"password\").invalid && ctx.registerForm.get(\"password\").touched && ctx.registerForm.get(\"password\").errors.required);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.registerForm.get(\"password\").invalid && ctx.registerForm.get(\"password\").touched && ctx.registerForm.get(\"password\").errors.pattern);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.roles);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", !ctx.registerForm.valid || !ctx.isRoleSelected);\n      }\n    },\n    directives: [i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlName, i5.NgClass, i5.NgIf, i2.PatternValidator, i5.NgForOf],\n    styles: [\".col-sm-2[_ngcontent-%COMP%]{min-width:100px!important}\"]\n  });\n  return RegisterComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}